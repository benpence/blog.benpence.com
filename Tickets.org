* DOING Read Only Mode Version 1
** DONE Convert markup language into backend posts at startup
CLOSED: [2016-08-19 Fri 23:18]
- JSON/YAML metadata with markdown file posts as JAR resources?
*** DONE Metadata
CLOSED: [2016-08-17 Wed 22:16]
**** DONE Decide metadata format and location?
CLOSED: [2016-08-14 Sun 22:38]
I decided to use YAML for now
- { id: 0,
    ...
    content: {
      location: "resource",
      url: "com/benpence/blog/posts/blah",
      encoding: "markdown",
    },
  }
**** DONE Unit test
CLOSED: [2016-08-17 Wed 21:16]
*** DONE Convert markdown resources to posts
CLOSED: [2016-08-17 Wed 22:16]
**** DONE Markdown to HTML utility
CLOSED: [2016-08-14 Sun 10:11]
**** DONE Read Markdown from resources
CLOSED: [2016-08-15 Mon 20:52]
**** DONE Unit test
CLOSED: [2016-08-17 Wed 21:16]
*** DONE Argument parsing library
CLOSED: [2016-08-19 Fri 23:18]
**** DONE Unit test
CLOSED: [2016-08-19 Fri 23:18]
*** DONE Primitives unit test
CLOSED: [2016-08-17 Wed 22:16]
** DOING Create most-recent frontend page
Shows most recent N posts
*** DONE Create layout in elm from static posts content
CLOSED: [2016-08-22 Mon 21:12]
Use Scala PostApi as Post object template
*** DONE Connect layout to server API
CLOSED: [2016-08-31 Wed 21:04]
*** DONE Render post content client side
CLOSED: [2016-09-01 Thu 22:30]
*** DOING Add more server support
**** DONE Consolidate server API
CLOSED: [2016-09-05 Mon 00:03]
**** TODO Tag counts
***** TODO Add TagStore in server
***** TODO Add API endpoint for tags
***** TODO Add frontend client method for tagcount
**** TODO Individual post (client only)
**** TODO About page
*** TODO Better handling of failed fetches
*** TODO Pagination server and client side
*** TODO Delay search results to reduce requests
*** TODO Add unit tests against events
**** TODO State changes
**** TODO Research how other people do view tests
** TODO Add search box for listing posts that match query
** After thoughts
*** DONE Reduce property-based FilesTest duration
CLOSED: [2016-09-01 Thu 22:23]
*** TODO Add revision number for posts, UI, API
Use "The Title: Revision 1.md" and "The Title: Revision 2.md" or something similar
*** TODO Blog Server feature tests
* TODO Read Only Mode Version 2
** TODO Create persistent store
MySQL or SQLlite. Don't actually add API write path
*** TODO Research how/if Slick and Twitter Futures work together
Use Slick for just SQL generation or for DB access?

https://github.com/ikhoon/finatra-mysql-seed/blob/master/src/main/scala/com/github/ikhoon/persistence/slick/user/SlickUserRepository.scala
https://github.com/slick/slick/blob/master/slick/src/main/scala/slick/jdbc/JdbcBackend.scala#L66
**** TODO Research how Twitter Future concurrency works
**** TODO Basic Slick SQL writing utility
