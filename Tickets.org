* DOING Read Only Mode Version 1
** DONE Convert markup language into backend posts at startup
CLOSED: [2016-08-19 Fri 23:18]
- JSON/YAML metadata with markdown file posts as JAR resources?
*** DONE Metadata
CLOSED: [2016-08-17 Wed 22:16]
**** DONE Decide metadata format and location?
CLOSED: [2016-08-14 Sun 22:38]
I decided to use YAML for now
- { id: 0,
    ...
    content: {
      location: "resource",
      url: "com/benpence/blog/posts/blah",
      encoding: "markdown",
    },
  }
**** DONE Unit test
CLOSED: [2016-08-17 Wed 21:16]
*** DONE Convert markdown resources to posts
CLOSED: [2016-08-17 Wed 22:16]
**** DONE Markdown to HTML utility
CLOSED: [2016-08-14 Sun 10:11]
**** DONE Read Markdown from resources
CLOSED: [2016-08-15 Mon 20:52]
**** DONE Unit test
CLOSED: [2016-08-17 Wed 21:16]
*** DONE Argument parsing library
CLOSED: [2016-08-19 Fri 23:18]
**** DONE Unit test
CLOSED: [2016-08-19 Fri 23:18]
*** DONE Primitives unit test
CLOSED: [2016-08-17 Wed 22:16]
** DONE Create most-recent frontend page
CLOSED: [2016-09-05 Mon 19:18]
Shows most recent N posts
*** DONE Create layout in elm from static posts content
CLOSED: [2016-08-22 Mon 21:12]
Use Scala PostApi as Post object template
*** DONE Connect layout to server API
CLOSED: [2016-08-31 Wed 21:04]
*** DONE Render post content client side
CLOSED: [2016-09-01 Thu 22:30]
*** DONE Add more server support
CLOSED: [2016-09-05 Mon 19:18]
**** DONE Consolidate server API
CLOSED: [2016-09-05 Mon 00:03]
**** DONE Tag counts
CLOSED: [2016-09-05 Mon 15:08]
***** DONE Add TagStore in server
CLOSED: [2016-09-05 Mon 15:08]
***** DONE Add API endpoint for tags
CLOSED: [2016-09-05 Mon 15:08]
***** DONE Add frontend client method for tagcount
CLOSED: [2016-09-05 Mon 15:08]
**** DONE Individual post (client only)
CLOSED: [2016-09-05 Mon 19:16]
** DONE Make web buttons use anchor
CLOSED: [2016-09-07 Wed 21:53]
** DONE About page
CLOSED: [2016-09-07 Wed 22:25]
*** DONE Create static file
CLOSED: [2016-09-07 Wed 22:08]
*** DONE Add frontend client method
CLOSED: [2016-09-07 Wed 22:16]
*** DONE Render About content
CLOSED: [2016-09-07 Wed 22:16]
** DONE Pagination server and client side
CLOSED: [2016-09-10 Sat 20:35]
*** DONE Add server support
CLOSED: [2016-09-08 Thu 22:55]
*** DONE Add frontend API support
CLOSED: [2016-09-08 Thu 22:55]
*** DONE Add buttons in UI for page 1
CLOSED: [2016-09-10 Sat 20:23]
*** DONE Connect frontend client API to UI
CLOSED: [2016-09-10 Sat 20:23]
** DONE Purescript primitives
CLOSED: [2017-03-07 Tue 22:47]
*** DONE Halogen MVP
CLOSED: [2017-01-10 Tue 22:52]
*** DONE Lens
CLOSED: [2017-01-24 Tue 19:27]
** DONE Convert to Purescript + Pux
CLOSED: [2017-03-10 Fri 18:59]
*** DONE Tag
CLOSED: [2017-02-19 Sun 12:47]
*** DONE Header
CLOSED: [2017-02-19 Sun 12:47]
*** DONE Create body component
CLOSED: [2017-03-05 Sun 16:04]
*** DONE Glue together header, body into one complete view. No API yet
CLOSED: [2017-03-05 Sun 16:04]
*** DONE Create API experiment
CLOSED: [2017-03-06 Mon 20:47]
*** DONE Create API + Pux experiment
CLOSED: [2017-03-07 Tue 21:56]
*** DONE Migrate API + Pux experiment into main source
CLOSED: [2017-03-07 Tue 22:46]
*** DONE Connect API into UI
CLOSED: [2017-03-08 Wed 22:19]
*** DONE Research how where API attaches hierarchy
CLOSED: [2017-03-10 Fri 18:58]
** DOING Process markdown parsing server-side
*** DONE Parse server side
CLOSED: [2017-03-10 Fri 19:47]
*** TODO Add route for about
*** TODO Cache parsing results server side
** TODO Delete elm
** TODO Add frontend cache
*** TODO Api.Client as part af Model. Client methods yield new client
*** TODO Make server-side API changes for selective reading
*** TODO Time/space-based expiration?
** TODO Add unit tests against events
*** TODO State changes
*** TODO Research how other people do view tests
** TODO Better handling of failed fetches
** After thoughts
*** DONE Reduce property-based FilesTest duration
CLOSED: [2016-09-01 Thu 22:23]
*** TODO Add revision number for posts, UI, API
Use "The Title: Revision 1.md" and "The Title: Revision 2.md" or something similar
*** TODO Blog Server feature tests
*** TODO Normalize frontend cache
*** TODO Delay search results to reduce requests
* TODO Read Only Mode Version 2
** TODO Create persistent store
MySQL or SQLlite. Don't actually add API write path
*** TODO Research how/if Slick and Twitter Futures work together
Use Slick for just SQL generation or for DB access?

https://github.com/ikhoon/finatra-mysql-seed/blob/master/src/main/scala/com/github/ikhoon/persistence/slick/user/SlickUserRepository.scala
https://github.com/slick/slick/blob/master/slick/src/main/scala/slick/jdbc/JdbcBackend.scala#L66
**** TODO Research how Twitter Future concurrency works
**** TODO Basic Slick SQL writing utility
